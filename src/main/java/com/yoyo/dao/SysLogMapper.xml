<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoyo.dao.SysLogDao">
    <!-- SysLog的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_SysLog_Map" type="com.yoyo.entity.SysLog">
        <id column="id" property="id" />
        <result column="login_name" property="loginName" />
        <result column="role_name" property="roleName" />
        <result column="opt_content" property="optContent" />
        <result column="client_ip" property="clientIp" />
        <result column="create_time" property="createTime" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:sys_log的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="sys_log_Column">
        sys_log.id as id
        ,sys_log.login_name as login_name
        ,sys_log.role_name as role_name
        ,sys_log.opt_content as opt_content
        ,sys_log.client_ip as client_ip
        ,sys_log.create_time as create_time
    </sql>

    <!--获得类名为:SysLog对应的数据库表的数据总行数 -->
    <select id="getSysLogRowCount" parameterType="com.yoyo.common.Assist" resultType="java.lang.Long">
        select count(id) from sys_log
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:SysLog对应数据库中表的数据集合 -->
    <select id="selectSysLog" parameterType="com.yoyo.common.Assist"  resultMap="result_SysLog_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="sys_log_Column" /> 
            </otherwise>
        </choose>
        from sys_log
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM sys_log
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=sys_log.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个SysLog对象,以参数SysLog对象中不为空的属性作为条件进行查询-->
    <select id="selectSysLogByObj" parameterType="com.yoyo.entity.SysLog" resultMap="result_SysLog_Map">
        select 
            <include refid="sys_log_Column" /> 
        from sys_log
        <where>
            <if test="createTime != null "> and sys_log.create_time = #{createTime}</if>
            <if test="clientIp != null "> and sys_log.client_ip = #{clientIp}</if>
            <if test="optContent != null "> and sys_log.opt_content = #{optContent}</if>
            <if test="roleName != null "> and sys_log.role_name = #{roleName}</if>
            <if test="loginName != null "> and sys_log.login_name = #{loginName}</if>
            <if test="id != null "> and sys_log.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过SysLog的id获得对应数据库中表的数据对象-->
    <select id="selectSysLogById" parameterType="java.lang.Long" resultMap="result_SysLog_Map">
        select 
            <include refid="sys_log_Column" /> 
        from sys_log
        where sys_log.id = #{id}
    </select> 

    <!-- 将SysLog插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertSysLog" parameterType="com.yoyo.entity.SysLog">
        insert into sys_log(id,login_name,role_name,opt_content,client_ip,create_time) 
        values(#{id},#{loginName},#{roleName},#{optContent},#{clientIp},#{createTime})
    </insert>

    <!-- 将SysLog中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptySysLog" parameterType="com.yoyo.entity.SysLog">
        insert into sys_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="loginName != null">login_name,</if>
            <if test="roleName != null">role_name,</if>
            <if test="optContent != null">opt_content,</if>
            <if test="clientIp != null">client_ip,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="loginName != null"> #{loginName},</if>
            <if test="roleName != null"> #{roleName},</if>
            <if test="optContent != null"> #{optContent},</if>
            <if test="clientIp != null"> #{clientIp},</if>
            <if test="createTime != null"> #{createTime},</if>
        </trim>
    </insert>

    <!-- 通过SysLog的id将数据库表中对应的数据删除-->
    <delete id="deleteSysLogById" parameterType="java.lang.Long">
        delete from sys_log
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将SysLog对应的数据库表的数据删除-->
    <delete id="deleteSysLog" parameterType="com.yoyo.common.Assist">
        delete from sys_log
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过SysLog的id将SysLog的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateSysLogById" parameterType="com.yoyo.entity.SysLog">
        update sys_log set
            login_name=#{loginName}
            ,role_name=#{roleName}
            ,opt_content=#{optContent}
            ,client_ip=#{clientIp}
            ,create_time=#{createTime}
        where id=#{id}
    </update>

    <!-- 通过SysLog的id将SysLog中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysLogById" parameterType="com.yoyo.entity.SysLog">
        update sys_log
        <set>
            <if test="loginName != null">
                login_name=#{loginName},
            </if>
            <if test="roleName != null">
                role_name=#{roleName},
            </if>
            <if test="optContent != null">
                opt_content=#{optContent},
            </if>
            <if test="clientIp != null">
                client_ip=#{clientIp},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将SysLog中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateSysLog" parameterType="map">
        update sys_log
        <set>
                id=#{enti.id},
                login_name=#{enti.loginName},
                role_name=#{enti.roleName},
                opt_content=#{enti.optContent},
                client_ip=#{enti.clientIp},
                create_time=#{enti.createTime},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将SysLog中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysLog" parameterType="map">
        update sys_log
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.loginName != null">
                login_name=#{enti.loginName},
            </if>
            <if test="enti.roleName != null">
                role_name=#{enti.roleName},
            </if>
            <if test="enti.optContent != null">
                opt_content=#{enti.optContent},
            </if>
            <if test="enti.clientIp != null">
                client_ip=#{enti.clientIp},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>