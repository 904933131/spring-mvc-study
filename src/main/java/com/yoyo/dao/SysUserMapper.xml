<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoyo.dao.SysUserDao">
    <!-- SysUser的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_SysUser_Map" type="com.yoyo.entity.SysUser">
        <id column="id" property="id" />
        <result column="login_name" property="loginName" />
        <result column="name" property="name" />
        <result column="password" property="password" />
        <result column="sex" property="sex" />
        <result column="age" property="age" />
        <result column="phone" property="phone" />
        <result column="dept_id" property="deptId" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:sys_user的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="sys_user_Column">
        sys_user.id as id
        ,sys_user.login_name as login_name
        ,sys_user.name as name
        ,sys_user.password as password
        ,sys_user.sex as sex
        ,sys_user.age as age
        ,sys_user.phone as phone
        ,sys_user.dept_id as dept_id
        ,sys_user.status as status
        ,sys_user.create_time as create_time
    </sql>

    <!--获得类名为:SysUser对应的数据库表的数据总行数 -->
    <select id="getSysUserRowCount" parameterType="com.yoyo.common.Assist" resultType="java.lang.Long">
        select count(id) from sys_user
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:SysUser对应数据库中表的数据集合 -->
    <select id="selectSysUser" parameterType="com.yoyo.common.Assist"  resultMap="result_SysUser_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="sys_user_Column" /> 
            </otherwise>
        </choose>
        from sys_user
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM sys_user
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=sys_user.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个SysUser对象,以参数SysUser对象中不为空的属性作为条件进行查询-->
    <select id="selectSysUserByObj" parameterType="com.yoyo.entity.SysUser" resultMap="result_SysUser_Map">
        select 
            <include refid="sys_user_Column" /> 
        from sys_user
        <where>
            <if test="createTime != null "> and sys_user.create_time = #{createTime}</if>
            <if test="status != null "> and sys_user.status = #{status}</if>
            <if test="deptId != null "> and sys_user.dept_id = #{deptId}</if>
            <if test="phone != null "> and sys_user.phone = #{phone}</if>
            <if test="age != null "> and sys_user.age = #{age}</if>
            <if test="sex != null "> and sys_user.sex = #{sex}</if>
            <if test="password != null "> and sys_user.password = #{password}</if>
            <if test="name != null "> and sys_user.name = #{name}</if>
            <if test="loginName != null "> and sys_user.login_name = #{loginName}</if>
            <if test="id != null "> and sys_user.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过SysUser的id获得对应数据库中表的数据对象-->
    <select id="selectSysUserById" parameterType="java.lang.Long" resultMap="result_SysUser_Map">
        select 
            <include refid="sys_user_Column" /> 
        from sys_user
        where sys_user.id = #{id}
    </select> 

    <!-- 将SysUser插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertSysUser" parameterType="com.yoyo.entity.SysUser">
        insert into sys_user(id,login_name,name,password,sex,age,phone,dept_id,status,create_time) 
        values(#{id},#{loginName},#{name},#{password},#{sex},#{age},#{phone},#{deptId},#{status},#{createTime})
    </insert>

    <!-- 将SysUser中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptySysUser" parameterType="com.yoyo.entity.SysUser">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="loginName != null">login_name,</if>
            <if test="name != null">name,</if>
            <if test="password != null">password,</if>
            <if test="sex != null">sex,</if>
            <if test="age != null">age,</if>
            <if test="phone != null">phone,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="loginName != null"> #{loginName},</if>
            <if test="name != null"> #{name},</if>
            <if test="password != null"> #{password},</if>
            <if test="sex != null"> #{sex},</if>
            <if test="age != null"> #{age},</if>
            <if test="phone != null"> #{phone},</if>
            <if test="deptId != null"> #{deptId},</if>
            <if test="status != null"> #{status},</if>
            <if test="createTime != null"> #{createTime},</if>
        </trim>
    </insert>

    <!-- 通过SysUser的id将数据库表中对应的数据删除-->
    <delete id="deleteSysUserById" parameterType="java.lang.Long">
        delete from sys_user
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将SysUser对应的数据库表的数据删除-->
    <delete id="deleteSysUser" parameterType="com.yoyo.common.Assist">
        delete from sys_user
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过SysUser的id将SysUser的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateSysUserById" parameterType="com.yoyo.entity.SysUser">
        update sys_user set
            login_name=#{loginName}
            ,name=#{name}
            ,password=#{password}
            ,sex=#{sex}
            ,age=#{age}
            ,phone=#{phone}
            ,dept_id=#{deptId}
            ,status=#{status}
            ,create_time=#{createTime}
        where id=#{id}
    </update>

    <!-- 通过SysUser的id将SysUser中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysUserById" parameterType="com.yoyo.entity.SysUser">
        update sys_user
        <set>
            <if test="loginName != null">
                login_name=#{loginName},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="password != null">
                password=#{password},
            </if>
            <if test="sex != null">
                sex=#{sex},
            </if>
            <if test="age != null">
                age=#{age},
            </if>
            <if test="phone != null">
                phone=#{phone},
            </if>
            <if test="deptId != null">
                dept_id=#{deptId},
            </if>
            <if test="status != null">
                status=#{status},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将SysUser中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateSysUser" parameterType="map">
        update sys_user
        <set>
                id=#{enti.id},
                login_name=#{enti.loginName},
                name=#{enti.name},
                password=#{enti.password},
                sex=#{enti.sex},
                age=#{enti.age},
                phone=#{enti.phone},
                dept_id=#{enti.deptId},
                status=#{enti.status},
                create_time=#{enti.createTime},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将SysUser中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysUser" parameterType="map">
        update sys_user
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.loginName != null">
                login_name=#{enti.loginName},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.password != null">
                password=#{enti.password},
            </if>
            <if test="enti.sex != null">
                sex=#{enti.sex},
            </if>
            <if test="enti.age != null">
                age=#{enti.age},
            </if>
            <if test="enti.phone != null">
                phone=#{enti.phone},
            </if>
            <if test="enti.deptId != null">
                dept_id=#{enti.deptId},
            </if>
            <if test="enti.status != null">
                status=#{enti.status},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>